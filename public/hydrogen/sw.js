const k="icon.png",H=["config.json","assets/theme-element.json","index.html"],N=["assets/icon-maskable.965d12c4.png","assets/download-sandbox.62573e78.html","assets/olm.cf9a793b.js","assets/olm.3fc8dbfe.wasm","assets/verified-2681323157.7a5b96f7.svg","assets/encryption-status-2466457756.2b233844.svg","assets/verification-error-287453810.c207c1f7.svg","assets/chevron-down-4222366914.10e718a0.svg","assets/mic-muted-2104522790.46b993a8.svg","assets/room-members-552099856.6468d00f.svg","assets/cam-muted-1846550351.ffa7451a.svg","assets/hangup-1459947004.98232943.svg","assets/mic-muted-66202682.57a01ae7.svg","assets/mic-unmuted-753569663.eb4558b9.svg","assets/cam-unmuted-3031312109.c0a71e31.svg","assets/cam-muted-837211800.086f6f3a.svg","assets/clear-2774149743.25d2a1a5.svg","assets/clear-321827907.0ad4c3d3.svg","assets/enable-grid-3410656820.869dfc71.svg","assets/element-logo-3261758054.d30f73b0.svg","assets/settings-2188851650.6ce736dd.svg","assets/plus-1114161079.76e4a818.svg","assets/disable-grid-381940759.bf3ec9b9.svg","assets/search-1216807122.e2db0517.svg","assets/clear-4128992820.c687b59e.svg","assets/chevron-left-4051426103.1d063923.svg","assets/chevron-right-3265853020.1668a8e2.svg","assets/vertical-ellipsis-1161016779.0eb8f90d.svg","assets/send-22306968.21e03815.svg","assets/paperclip-2017288407.983fd784.svg","assets/room-members-1777348026.3723c81d.svg","assets/chevron-small-2249995192.ddaa65af.svg","assets/encryption-status-148435973.546a9993.svg","assets/e2ee-normal-322455343.1117825e.svg","assets/e2ee-disabled-3336174477.1d6a0aec.svg","assets/chevron-thin-left-1736206985.408272ea.svg","assets/video-call-1492105049.bcfd26e8.svg","assets/room-members-3864352671.6141ea49.svg","assets/e2ee-normal-2082276166.fac4cb6a.svg","assets/e2ee-normal-3675429460.744ccaa7.svg","assets/verified-148653411.61943211.svg","assets/encryption-status-796945644.2361cec2.svg","assets/chevron-down-3785620110.afbde64f.svg","assets/room-members-4163724204.9ee8c078.svg","assets/mic-muted-3540805494.f2a95eee.svg","assets/cam-muted-1537885986.17a454ae.svg","assets/hangup-3886527546.591a21fe.svg","assets/mic-unmuted-3124716923.acfc746d.svg","assets/mic-muted-2292216055.fb4e66f1.svg","assets/cam-unmuted-2657771024.eab7e0a1.svg","assets/cam-muted-3572190042.91441cd7.svg","assets/element-logo-1479416831.916e53be.svg","assets/settings-473504987.9fb60f44.svg","assets/enable-grid-19797126.5f7f212b.svg","assets/plus-3492695231.f68a8fb2.svg","assets/search-3519801843.c60d59b4.svg","assets/disable-grid-467922924.1fd04a4e.svg","assets/clear-3648988329.a70fcd40.svg","assets/chevron-left-1481500981.184b3dea.svg","assets/dismiss-4233899070.e742fe4f.svg","assets/vertical-ellipsis-2605836832.1a401ab9.svg","assets/chevron-right-303694867.51a12b2c.svg","assets/send-3595901744.73aebc5f.svg","assets/paperclip-2601848969.d712e97c.svg","assets/chevron-small-2548177047.15430554.svg","assets/room-members-4052062574.ea81c886.svg","assets/encryption-status-3086181075.7eec7e56.svg","assets/chevron-thin-left-1290349364.d809e549.svg","assets/video-call-1785808559.c0991b33.svg","assets/room-members-1599427214.d9b76baa.svg","assets/e2ee-normal-4246783910.14c1f427.svg","assets/e2ee-normal-12529910.38bc781b.svg","assets/index.c4591a29.js","assets/vendor.94f7dd4a.js","assets/theme-element-light.ef3f8cbf.css","assets/theme-element-runtime.054f90d4.css","assets/theme-element-dark.58269a1f.css","assets/verification-error.80ad562b.svg","assets/verified.b90752ec.svg","assets/encryption-status.8054183e.svg","assets/chevron-down.9a7440b9.svg","assets/room-members.35ed0bf9.svg","assets/mic-muted.56aa03b9.svg","assets/cam-muted.9f690631.svg","assets/hangup.8b163c30.svg","assets/mic-unmuted.c180f63a.svg","assets/cam-unmuted.67e18332.svg","assets/clear.0d180c33.svg","assets/element-logo.86bc8565.svg","assets/enable-grid.eef43c65.svg","assets/settings.45b8e09f.svg","assets/plus.49560f96.svg","assets/disable-grid.371ceaaa.svg","assets/search.21e0fd39.svg","assets/chevron-left.b8b2c5fc.svg","assets/chevron-right.885731d1.svg","assets/vertical-ellipsis.70ab5d25.svg","assets/send.7a090949.svg","assets/paperclip.ec29fd9d.svg","assets/chevron-small.dfd7e618.svg","assets/e2ee-normal.bef76bd4.svg","assets/e2ee-disabled.8507165d.svg","assets/chevron-thin-left.d111869b.svg","assets/video-call.d3cb081e.svg","assets/icon.8024c299.png"],b=["assets/main.165de79c.js","assets/olm_legacy.bc22f405.js","assets/Inter-Thin.5d8e2ac4.woff2","assets/Inter-ThinItalic.6b3ded18.woff2","assets/Inter-ExtraLight.da47c335.woff2","assets/Inter-Light.0f7dfe72.woff2","assets/Inter-ExtraLightItalic.b3f94cfe.woff2","assets/Inter-LightItalic.125c7e6a.woff2","assets/Inter-Regular.89d406b0.woff2","assets/Inter-Italic.bab4e808.woff2","assets/Inter-Medium.5d308f3d.woff2","assets/Inter-MediumItalic.76551c20.woff2","assets/Inter-SemiBold.c7c3befe.woff2","assets/Inter-Bold.6f5e9a23.woff2","assets/Inter-ExtraBold.0ef4267e.woff2","assets/Inter-ExtraBoldItalic.d1e1f6a0.woff2","assets/Inter-SemiBoldItalic.d376ade4.woff2","assets/Inter-BoldItalic.e09dcbe1.woff2","assets/Inter-Black.7f1f5616.woff2","assets/Inter-BlackItalic.72d5983b.woff2","assets/Inter-Thin.5565b01e.woff","assets/Inter-ThinItalic.c413497b.woff","assets/Inter-LightItalic.ec6c76a8.woff","assets/Inter-ExtraLight.d7be68a4.woff","assets/Inter-Light.38326098.woff","assets/Inter-ExtraLightItalic.762fa4d2.woff","assets/Inter-Regular.5b3a854b.woff","assets/Inter-Italic.7b187d57.woff","assets/Inter-Medium.0fc5d904.woff","assets/Inter-MediumItalic.1458af9d.woff","assets/Inter-SemiBold.04cd699f.woff","assets/Inter-ExtraBold.45bae435.woff","assets/Inter-ExtraBoldItalic.30a1af87.woff","assets/Inter-Bold.20d46cff.woff","assets/Inter-SemiBoldItalic.420db54a.woff","assets/Inter-BoldItalic.31a185fa.woff","assets/Inter-BlackItalic.c628a2cf.woff","assets/Inter-Black.067c82f7.woff","assets/manifest.1f23c85b.json"],u=`hydrogen-assets-${"2264057765"}`,r="hydrogen-assets",A="hydrogen-media-thumbnails-v2";self.addEventListener("install",function(e){e.waitUntil((async()=>{await(await caches.open(u)).addAll(H);const a=await caches.open(r);await Promise.all(N.map(async n=>{await a.match(n)||await a.add(n)}))})())});self.addEventListener("activate",e=>{self.clients.claim(),e.waitUntil(I())});async function I(){const e=await caches.keys();for(const s of e)s!==u&&s!==r&&s!==A&&await caches.delete(s);const t=await caches.open(r),a=await t.keys(),n=N.concat(b).map(s=>new URL(s,self.registration.scope).href);for(const s of a)n.some(i=>i===s.url)||t.delete(s)}self.addEventListener("fetch",e=>{e.request.method==="GET"&&e.respondWith(D(e))});function C(e){if(e.pathname.startsWith("/_matrix/media/r0/thumbnail/")||e.pathname.startsWith("/_matrix/client/v1/media/thumbnail/")){const t=parseInt(e.searchParams.get("width"),10),a=parseInt(e.searchParams.get("height"),10);if(t<=50&&a<=50)return!0}return!1}const m=new URL(self.registration.scope);let w=new AbortController;async function D({request:e,clientId:t}){try{if(e.url.includes("config.json")||/theme-.+\.json/.test(e.url))return F(e);const a=new URL(e.url);if(a.origin===m.origin&&a.pathname===m.pathname&&(e=new Request(new URL("index.html",m.href))),a.pathname.indexOf("/_matrix/client/v1/media")===0){const i=await self.clients.get(t),{accessToken:o,homeserver:p}=await l(i,"getAuthInfo",{});if(!o)throw new Error("Token returned from getAuthInfo message in sw.js is null!");if(!p)throw new Error("homeserver returned from getAuthInfo message in sw.js is null!");if(new URL(p).origin===a.origin){const h=new Headers(e.headers);h.set("authorization",`Bearer ${o}`),e=new Request(e,{mode:"cors",credentials:"omit",headers:h})}}let s=await U(e);return s||(C(a)?s=await fetch(e,{signal:w.signal,mode:"cors",credentials:"omit"}):s=await fetch(e,{signal:w.signal}),await L(e,s)),s}catch(a){throw a.name!=="TypeError"&&a.name!=="AbortError"&&console.error("error in service worker",a),a}}async function F(e){let t=await U(e);const a=O(e);return t||await a}async function O(e){const t=await fetch(e,{signal:w.signal,headers:{"Cache-Control":"no-cache"}});return L(e,t.clone()),t}async function L(e,t){if(t.status>=400)return;const a=new URL(e.url),n=self.registration.scope;if(C(a))(await caches.open(A)).put(e,t.clone());else if(e.url.startsWith(n)){let s=e.url.substr(n.length),i;b.includes(s)?i=r:H.includes(s)&&(i=u),i&&await(await caches.open(i)).put(e,t.clone())}}async function U(e){let a=await(await caches.open(u)).match(e);if(a||(a=await(await caches.open(r)).match(e),a))return a;const s=new URL(e.url);if(C(s)){const i=await caches.open(A);a=await i.match(e),(a==null?void 0:a.status)>=400&&(await i.delete(e),a=null)}return a}self.addEventListener("message",e=>{var n;const t=s=>e.source.postMessage({replyTo:e.data.id,payload:s}),{replyTo:a}=e.data;if(a){const s=E.get(a);s&&(E.delete(a),s(e.data.payload))}else switch((n=e.data)==null?void 0:n.type){case"version":t({version:"0.5.1",buildHash:"2264057765"});break;case"skipWaiting":self.skipWaiting();break;case"haltRequests":e.waitUntil(v().finally(()=>t()));break;case"closeSession":e.waitUntil(M(e.data.payload.sessionId,e.source.id).finally(()=>t()));break}});const y="new_message";async function P(e){if(e.notification.tag!==y){console.log("clicked notif with tag",e.notification.tag);return}const{sessionId:t,roomId:a}=e.notification.data,s=`${`#/session/${t}`}/room/${a}`,i=await T(async o=>await l(o,"hasSessionOpen",{sessionId:t}));if(i){if(console.log("notificationclick: client has session open, showing room there"),i.postMessage({type:"openRoom",payload:{roomId:a}}),"focus"in i)try{await i.focus()}catch(o){console.error(o)}}else if(self.clients.openWindow){console.log("notificationclick: no client found with session open, opening new window");const o=new URL(`./${s}`,m).href;await self.clients.openWindow(o)}}self.addEventListener("notificationclick",e=>{e.notification.close(),e.waitUntil(P(e))});async function W(e){var n;console.log("got a push message",e);const t=e.session_id;let a=e.sender_display_name||e.sender;if(a&&e.event_id){const s=e.room_id;if(!!await T(async c=>{if(c.visibilityState==="visible"&&c.focused)return await l(c,"hasRoomOpen",{sessionId:t,roomId:s})})){console.log("client is focused, room is open, don't show notif");return}const o=Array.from(await self.registration.getNotifications({tag:y})),S=o.filter(c=>c.data.roomId===s).some(c=>c.data.multi),h=o.some(c=>!c.data.multi),f=e.room_name||e.room_alias;let R=!1,d,g;if(S){console.log("already have a multi message, don't do anything");return}else h?(console.log("showing multi message notification"),R=!0,d=f||a,g="New messages"):(console.log("showing new message notification"),f&&f!==a?d=`${a} in ${f}`:d=a,g=((n=e.content)==null?void 0:n.body)||"New message");await self.registration.showNotification(d,{body:g,data:{sessionId:t,roomId:s,multi:R},tag:y,badge:k})}}self.addEventListener("push",e=>{e.waitUntil(W(e.data.json()))});async function M(e,t){const a=await self.clients.matchAll();await Promise.all(a.map(async n=>{n.id!==t&&await l(n,"closeSession",{sessionId:e})}))}async function v(){const e=await self.clients.matchAll({type:"window"});await Promise.all(e.map(t=>l(t,"haltRequests"))),w.abort()}const E=new Map;let _=0;function l(e,t,a){_+=1;const n=_,s=new Promise(i=>{E.set(n,i)});return e.postMessage({type:t,id:n,payload:a}),s}async function T(e){const t=await self.clients.matchAll({type:"window"});for(const a of t)if(await e(a))return a}
//# sourceMappingURL=sw.js.map
